"""
Count tags in captions (which generated by image-tag-estimation-systems like DeepDanbooru https://github.com/KichangKim/DeepDanbooru).

This gives you a perspective: How the image-tag-estimation-systems thinks of your training target in tags? How to describe your target in prompts?
If you want the model to learn some tags that DeepDanbooru have tagged, it is a good idea to remove them from the captions.

FYI: What effect image captions have during training:
https://github.com/rinongal/textual_inversion/issues/131
"""
import os
import re


def count_tag_frequencies(file_dir, caption_file_ext='txt') -> dict[str, int]:
    """Basically just read the text files, find tags, then count them."""
    tag_map = dict()

    for filename in [f for f in os.listdir(file_dir) if f.endswith(caption_file_ext)]:
        with open(os.path.join(file_dir, filename), 'r') as file:
            for line in file.read().splitlines():
                if ',' in line:
                    # tags divided by comma:
                    # tag1, tag2,
                    # (tag3, tag4, ...)
                    tags = re.compile(r'\s*,\s*').split(line)
                else:
                    # one tag per line:
                    # tag1
                    # tag2
                    # ...
                    tags = [line]

                for tag in tags:
                    tag_map[tag] = tag_map.get(tag) + 1 if (tag in tag_map.keys()) else 1

    return tag_map


def rank_counted_tags(tag_frequencies: dict[str, int]) -> list[(str, int)]:
    """The higher the frequency, the higher the ranking"""
    return sorted([(k, v) for k, v in tag_frequencies.items()], key=lambda tup: tup[1], reverse=True)


def print_one_tag_per_line(ranked_tags: list[(str, int)]):
    print('\n'.join([str(t) for t in ranked_tags]))


if __name__ == '__main__':
    CAPTIONS_DIR = r''
    CAPTION_FILE_EXT = 'txt'

    print_one_tag_per_line(rank_counted_tags(count_tag_frequencies(CAPTIONS_DIR, CAPTION_FILE_EXT)))
